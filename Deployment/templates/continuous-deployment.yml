parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    type: boolean
    default: false
  - name: AzureSubscription
    type: string

steps:

  - task: PowerShell@2
    displayName: "terraform $(Environment)deploy"
    name: TerraformDeploy
    inputs:
      targetType: filePath
      filePath: '$(Pipeline.Workspace)/terraformartifact/terraform_conditional_run.ps1'
      arguments: '-deploymentResourceGroupName $(DeploymentResourceGroupName) -deploymentStorageAccountName $(DeploymentStorageAccountName) -workSpace $(Environment) -continueEvenIfResourcesAreGettingDestroyed $${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }} -terraformJsonOutputFile $(Pipeline.Workspace)/terraformartifact/terraform_output.json'
    env:
      ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
      ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
      ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)
      ARM_SUBSCRIPTION_ID: $(TERRAFORM-SUBSCRIPTION-ID)
      TF_VAR_spoke_rg: $(spokeRG)
      TF_VAR_spoke_vnet_name: $(spokeVnetName)
      TF_VAR_spoke_subnet_name: $(spokeSubnetName)

  - task: PowerShell@2
    displayName: "Setting KeyVault Secrets as Pipeline Variables "
    inputs:
      targetType: 'inline'
      script: |
        echo "##vso[task.setvariable variable=SapConfiguration.Password]$(SapConfiguration--Password)"
        echo "##vso[task.setvariable variable=SapConfiguration.Username]$(SapConfiguration--Username)"

  - task: FileTransform@1
    displayName: "File Transform: WebAppSettings"
    inputs:
      folderPath: '$(Pipeline.Workspace)/UKHOERPFacadeAPI/*.zip'
      fileType: 'json'
      targetFiles: '**/appsettings.json'

  #- task: AzureCLI@2
  #  displayName: "Disable Private End Point Network Policies"
  #  condition: always()
  #  inputs:
  #    azureSubscription: "${{ parameters.AzureSubscription }}"
  #    scriptType: 'pscore'
  #    scriptLocation: 'scriptPath'
  #    scriptPath: "$(Pipeline.Workspace)/terraformartifact/set_network_policy_env.ps1"

  - task: Bash@3
    displayName: "Azure App rule to whitelist build agent IP"
    inputs:
      targetType: 'inline'
      azureSubscription: "${{ parameters.AzureSubscription }}"
      script: |
        ipaddress=$(curl -s http://ipinfo.io/ip)
        echo "##vso[task.setvariable variable=address;isOutput=true;]$ipaddress"
        az resource update --resource-group erpfacade-qa-rg --name erpfacade-qa-api --resource-type "Microsoft.Web/sites" --set properties.publicNetworkAccess=Enabled
        az webapp config access-restriction add --resource-group erpfacade-qa-rg --name erpfacade-qa-api --rule-name 'build agent IP rule' --action Allow --ip-address $ipaddress --priority 100

  - task: AzureWebApp@1
    displayName: "Azure App Deploy: ERPFacade-$(Environment)-API"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      appType: webApp
      appName: "$(WEB_APP_NAME)"
      package: "$(Pipeline.Workspace)/UKHOERPFacadeAPI/UKHOERPFacadeAPI.zip"

  - task: FileTransform@1
    displayName: "File Transform: Mock Service Application Settings"
    inputs:
      folderPath: '$(Pipeline.Workspace)/UKHOMockSAPService/*.zip'
      fileType: 'json'
      targetFiles: '**/appsettings.json'

  - task: AzureWebApp@1
    displayName: "Azure App Deploy: ERPFacade-SAP-MockService"
    condition: and(succeeded(), eq(variables['Environment.Name'], 'ERP-Dev'))
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      appType: webApp
      appName: "$(MOCK_WEB_APP_NAME)"
      package: "$(Pipeline.Workspace)/UKHOMockSAPService/UKHO.SAP.MockAPIService.zip"


