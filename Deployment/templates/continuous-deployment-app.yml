parameters:
  - name: AzureSubscription
    type: string

steps:
  - task: PowerShell@2
    displayName: "Setting KeyVault Secrets as Pipeline Variables "
    inputs:
      targetType: 'inline'
      script: |
          echo "##vso[task.setvariable variable=SapConfiguration.SapPasswordForEncEvent]$(SapPasswordForEncEvent)"
          echo "##vso[task.setvariable variable=SapConfiguration.SapUsernameForEncEvent]$(SapUsernameForEncEvent)"
          echo "##vso[task.setvariable variable=SapConfiguration.SapUsernameForRecordOfSale]$(SapUsernameForRecordOfSale)"
          echo "##vso[task.setvariable variable=SapConfiguration.SapPasswordForRecordOfSale]$(SapPasswordForRecordOfSale)"
          
  - task: FileTransform@1
    displayName: "File Transform: Mock Service Application Settings"
    condition: and(succeeded(), eq(variables['Environment.Name'], 'ERP-Dev'))
    inputs:
      folderPath: '$(Pipeline.Workspace)/UKHOMockSAPService/*.zip'
      fileType: 'json'
      targetFiles: '**/appsettings.json'

  - task: AzureWebApp@1
    displayName: "Azure App Deploy: ERPFacade-SAP-MockService"
    condition: and(succeeded(), eq(variables['Environment.Name'], 'ERP-Dev'))
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      appType: webApp
      appName: "$(MOCK_WEB_APP_NAME)"
      package: "$(Pipeline.Workspace)/UKHOMockSAPService/UKHO.SAP.MockAPIService.zip"

  - task: FileTransform@1
    displayName: "File Transform: WebAppSettings"
    inputs:
      folderPath: '$(Pipeline.Workspace)/UKHOERPFacadeAPI/*.zip'
      fileType: 'json'
      targetFiles: '**/appsettings.json'

  - task: AzureCLI@2
    displayName: "Stop Event Aggregator Webjob"
    inputs:
      azureSubscription: "${{ parameters.AzureSubscription }}"
      scriptType: 'ps'
      scriptLocation: 'scriptPath'
      scriptPath: "$(Pipeline.Workspace)/terraformartifact/Stop_Azure_Webjob.ps1"
      arguments: '-resourcegroup $(ResourceGroup) -appname $(WEB_APP_NAME)'

  - task: azurewebapp@1
    displayname: "azure app deploy: staging slot"
    inputs:
      azuresubscription: "${{ parameters.azuresubscription }}"
      apptype: webapp
      appname: "$(web_app_name)"
      package: "$(pipeline.workspace)/ukhoerpfacadeapi/ukhoerpfacadeapi.zip"
      deploytoslotorase: true
      slotname: $(web_app_slot_name)

  - task: powershell@2
    displayname: "check the status of staging slot"
    inputs:
      targettype: filepath
      filepath: "$(pipeline.workspace)/terraformartifact/check_service_status.ps1"
      arguments: "-healthendpointurl https://$(web_app_slot_host_name)/health -waittimeinminute $(waittimeinminute)"
     
  - task: azureappservicemanage@0
    displayname: "swap with production slot"
    inputs:
      azuresubscription: "${{ parameters.azuresubscription }}"
      resourcegroupname: $(resourcegroup)
      webappname: $(web_app_name)
      action: "swap slots"
      swapwithproduction: true
      sourceslot: $(web_app_slot_name)

  - task: powershell@2
    displayname: "check the status of production slot"
    inputs:
      targettype: filepath
      filepath: "$(pipeline.workspace)/terraformartifact/check_service_status.ps1"
      arguments: "-healthendpointurl $(erpfacadeconfiguration.baseurl)/health -waittimeinminute $(waittimeinminute)"
